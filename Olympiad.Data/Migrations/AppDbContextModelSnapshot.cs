// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Olympiad.Data.Data;

#nullable disable

namespace Olympiad.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Olympiad.Data.Data.Models.CountryAgent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("IdPlayerAgent")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdPlayerAgent");

                    b.ToTable("CountryAgents");
                });

            modelBuilder.Entity("Olympiad.Data.Data.Models.Olympiada", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("IdTableOlypida")
                        .HasColumnType("int");

                    b.Property<string>("NameOlypiada")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdTableOlypida");

                    b.ToTable("Olympiads");
                });

            modelBuilder.Entity("Olympiad.Data.Data.Models.OlympiadaTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Bronze")
                        .HasColumnType("int");

                    b.Property<int>("Gold")
                        .HasColumnType("int");

                    b.Property<int>("IdCountryAgent")
                        .HasColumnType("int");

                    b.Property<int>("Silver")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdCountryAgent");

                    b.ToTable("OlympiadaTables");
                });

            modelBuilder.Entity("Olympiad.Data.Data.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("Olympiad.Data.Data.Models.CountryAgent", b =>
                {
                    b.HasOne("Olympiad.Data.Data.Models.Player", "Players")
                        .WithMany("Agents")
                        .HasForeignKey("IdPlayerAgent")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Players");
                });

            modelBuilder.Entity("Olympiad.Data.Data.Models.Olympiada", b =>
                {
                    b.HasOne("Olympiad.Data.Data.Models.OlympiadaTable", "OlympiadaTable")
                        .WithMany("Olympiads")
                        .HasForeignKey("IdTableOlypida")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OlympiadaTable");
                });

            modelBuilder.Entity("Olympiad.Data.Data.Models.OlympiadaTable", b =>
                {
                    b.HasOne("Olympiad.Data.Data.Models.CountryAgent", "CountryAgent")
                        .WithMany("Olympiada")
                        .HasForeignKey("IdCountryAgent")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CountryAgent");
                });

            modelBuilder.Entity("Olympiad.Data.Data.Models.CountryAgent", b =>
                {
                    b.Navigation("Olympiada");
                });

            modelBuilder.Entity("Olympiad.Data.Data.Models.OlympiadaTable", b =>
                {
                    b.Navigation("Olympiads");
                });

            modelBuilder.Entity("Olympiad.Data.Data.Models.Player", b =>
                {
                    b.Navigation("Agents");
                });
#pragma warning restore 612, 618
        }
    }
}
